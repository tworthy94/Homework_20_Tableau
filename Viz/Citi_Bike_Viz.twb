<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0621.1547                               -->
<workbook source-build='2019.2.1 (20192.19.0621.1547)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='201901-citibike-tripdata+' inline='true' name='federated.14cj0sa18u4js61ekenn20euv3yh' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='201901-citibike-tripdata' name='textscan.0bka5ux1djfe491f7pnyj0gnknh4'>
            <connection class='textscan' directory='C:/Users/tworthy/Desktop/Homework_Projects/20-Tableau/Source Data' filename='201901-citibike-tripdata.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0bka5ux1djfe491f7pnyj0gnknh4' name='201901-citibike-tripdata.csv' table='[201901-citibike-tripdata#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='tripduration' ordinal='0' />
            <column datatype='datetime' name='starttime' ordinal='1' />
            <column datatype='datetime' name='stoptime' ordinal='2' />
            <column datatype='integer' name='start station id' ordinal='3' />
            <column datatype='string' name='start station name' ordinal='4' />
            <column datatype='real' name='start station latitude' ordinal='5' />
            <column datatype='real' name='start station longitude' ordinal='6' />
            <column datatype='integer' name='end station id' ordinal='7' />
            <column datatype='string' name='end station name' ordinal='8' />
            <column datatype='real' name='end station latitude' ordinal='9' />
            <column datatype='real' name='end station longitude' ordinal='10' />
            <column datatype='integer' name='bikeid' ordinal='11' />
            <column datatype='string' name='usertype' ordinal='12' />
            <column datatype='integer' name='birth year' ordinal='13' />
            <column datatype='integer' name='gender' ordinal='14' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[201901-citibike-tripdata.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tripduration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tripduration]</local-name>
            <parent-name>[201901-citibike-tripdata.csv]</parent-name>
            <remote-alias>tripduration</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>starttime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[starttime]</local-name>
            <parent-name>[201901-citibike-tripdata.csv]</parent-name>
            <remote-alias>starttime</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stoptime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[stoptime]</local-name>
            <parent-name>[201901-citibike-tripdata.csv]</parent-name>
            <remote-alias>stoptime</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[start station id]</local-name>
            <parent-name>[201901-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station id</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[start station name]</local-name>
            <parent-name>[201901-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station latitude]</local-name>
            <parent-name>[201901-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station latitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station longitude]</local-name>
            <parent-name>[201901-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station longitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[end station id]</local-name>
            <parent-name>[201901-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[end station name]</local-name>
            <parent-name>[201901-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station latitude]</local-name>
            <parent-name>[201901-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station latitude</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station longitude]</local-name>
            <parent-name>[201901-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station longitude</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bikeid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bikeid]</local-name>
            <parent-name>[201901-citibike-tripdata.csv]</parent-name>
            <remote-alias>bikeid</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>usertype</remote-name>
            <remote-type>129</remote-type>
            <local-name>[usertype]</local-name>
            <parent-name>[201901-citibike-tripdata.csv]</parent-name>
            <remote-alias>usertype</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>birth year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[birth year]</local-name>
            <parent-name>[201901-citibike-tripdata.csv]</parent-name>
            <remote-alias>birth year</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[201901-citibike-tripdata.csv]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.14cj0sa18u4js61ekenn20euv3yh].[cnt:bikeid:qk]&quot;' value='Total Bikes' />
          <alias key='&quot;[federated.14cj0sa18u4js61ekenn20euv3yh].[cnt:usertype:qk]&quot;' value='Total Riders' />
          <alias key='&quot;[federated.14cj0sa18u4js61ekenn20euv3yh].[ctd:bikeid:qk]&quot;' value='Bikes' />
          <alias key='&quot;[federated.14cj0sa18u4js61ekenn20euv3yh].[ctd:end station id:qk]&quot;' value='End Stations' />
          <alias key='&quot;[federated.14cj0sa18u4js61ekenn20euv3yh].[ctd:start station id:qk]&quot;' value='Start Stations' />
          <alias key='&quot;[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]&quot;' value='Rides' />
          <alias key='&quot;[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:tripduration (201902-citibike-tripdata.csv):qk]&quot;' value='Trip Duration 201902' />
          <alias key='&quot;[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:tripduration:qk]&quot;' value='Trip Duration 201901' />
        </aliases>
      </column>
      <column caption='Average Trip Duration in Minutes' datatype='real' name='[Calculation_826410549642219524]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([tripduration]/60)' />
      </column>
      <column caption='Age' datatype='integer' name='[Calculation_829225297550897153]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='2019 - [birth year]' />
      </column>
      <column caption='Trip Duration in Hours' datatype='real' name='[Calculation_829225297556987907]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([tripduration]/60)/60' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
      <column caption='Birth Year' datatype='integer' name='[birth year]' role='dimension' type='quantitative' />
      <column caption='End Station Id' datatype='integer' name='[end station id]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Gender' datatype='integer' name='[gender]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='0' value='Not Specified' />
          <alias key='1' value='Male' />
          <alias key='2' value='Female' />
        </aliases>
      </column>
      <column caption='Start Station Id' datatype='integer' name='[start station id]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
      <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
      <column caption='Stoptime' datatype='datetime' name='[stoptime]' role='dimension' type='ordinal' />
      <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Usertype' datatype='string' name='[usertype]' role='dimension' type='nominal' />
      <column-instance column='[bikeid]' derivation='Count' name='[cnt:bikeid:qk]' pivot='key' type='quantitative' />
      <column-instance column='[usertype]' derivation='Count' name='[cnt:usertype:qk]' pivot='key' type='quantitative' />
      <column-instance column='[bikeid]' derivation='CountD' name='[ctd:bikeid:qk]' pivot='key' type='quantitative' />
      <column-instance column='[end station id]' derivation='CountD' name='[ctd:end station id:qk]' pivot='key' type='quantitative' />
      <column-instance column='[start station id]' derivation='CountD' name='[ctd:start station id:qk]' pivot='key' type='quantitative' />
      <column-instance column='[end station name]' derivation='None' name='[none:end station name:nk]' pivot='key' type='nominal' />
      <column-instance column='[gender]' derivation='None' name='[none:gender:ok]' pivot='key' type='ordinal' />
      <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tripduration]' derivation='Sum' name='[sum:tripduration:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.273616' measure-ordering='alphabetic' measure-percentage='0.726384' show-aliased-fields='true' show-hidden-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:end station name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;1 Ave &amp; E 94 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;11 St &amp; 43 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;28 Ave &amp; 44 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;3 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;34 Ave &amp; 38 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;48 Ave &amp; 30 Pl&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;6 Ave &amp; Spring St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Atlantic Ave &amp; Furman St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Berry St &amp; N 8 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Broadway &amp; W 49 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Carroll St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Centre St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Columbia St &amp; Kane St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cumberland St &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Duane St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 106 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 13 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 39 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 58 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 81 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Flushing Ave &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fulton St &amp; Grand Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greene Ave &amp; Throop Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Huron St &amp; Franklin St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LaGuardia Pl &amp; W 3 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lexington Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;McKibbin St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Myrtle Ave &amp; St Edwards St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pacific St &amp; Nevins St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pitt St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Riverside Dr &amp; W 91 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South St &amp; Whitehall St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sullivan St &amp; Washington Sq&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vernon Blvd &amp; 50 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 120 St &amp; Claremont Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 22 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 45 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 78 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Willoughby Ave &amp; Walworth St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;23 Ave &amp; 27 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;3 Ave &amp; E 62 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;31 St &amp; Astoria Blvd&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;43 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;5 Ave &amp; E 103 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;9 St &amp; 44 Rd&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Amsterdam Ave &amp; W 66 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bedford Ave &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Broadway &amp; Roebling St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cadman Plaza E &amp; Tillary St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central Park S &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Clinton St &amp; 4 Place&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Court St &amp; Nelson St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Division Av &amp; Hooper St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 123 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 25 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 51 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 74 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 9 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 93 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Front St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grand Army Plaza &amp; Central Park S&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Henry St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kingston Ave &amp; Herkimer St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Leonard St &amp; Nassau Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madison Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morningside Ave &amp; W 123 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Moore St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pershing Square North&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Railroad Ave &amp; Kay Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Schermerhorn St &amp; Bond St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;State St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;University Pl &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 104 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 17 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 37 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 56 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;West Drive &amp; Prospect Park West&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;1 Ave &amp; E 44 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;11 Ave &amp; W 27 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;27 Ave &amp; 4 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;3 Ave &amp; E 100 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;31 St &amp; Northern Blvd&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;46 Ave &amp; 5 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;5 St &amp; Market St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Amsterdam Ave &amp; W 119 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bergen St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Broadway &amp; W 36 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Carlton Ave &amp; Dean St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Central Park West &amp; W 76 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Clinton St &amp; Union St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Crescent St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Douglass St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 102 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 11 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 32 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 55 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 78 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eastern Pkwy &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Frost St &amp; Meeker St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grand St &amp; Greene St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hope St &amp; Union Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lafayette Ave &amp; Fort Greene Pl&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lexington Ave &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marcus Garvey Blvd &amp; Macon St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Murray St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NYCBS Depot BAL - DYR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pike St &amp; E Broadway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Riverside Blvd &amp; W 67 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Smith St &amp; 3 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sterling Pl &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vernon Blvd &amp; 30 Rd&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 110 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 20 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 42 St &amp; Dyer Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 67 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;West Thames St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;14 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;2 Ave &amp; 36 St - Citi Bike HQ at Industry City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;30 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;35 St &amp; 34 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;4 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;7 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 118 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baltic St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bond St &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broadway &amp; W 60 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Carroll St &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Clark St &amp; Henry St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Columbus Ave &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Degraw St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 114 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 17 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 2 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 44 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 65 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 85 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Franklin Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fulton St &amp; William St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Halsey St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jackson St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lenox Ave &amp; W 111 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lispenard St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Metropolitan Ave &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;N 15 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Park Pl &amp; Church St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;President St &amp; Henry St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Roebling St &amp; N 4 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;St Johns Pl &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Underhill Ave &amp; Pacific St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 11 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 26 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 49 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 87 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Washington Ave &amp; Greene Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wyckoff St &amp; Bond St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;1 Ave &amp; E 110 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;12 Ave &amp; W 40 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;28 St &amp; 36 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;3 St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;34 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;49 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;6 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Avenue D &amp; E 3 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bialystoker Pl &amp; Delancey St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Broadway &amp; W 51 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Carroll St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Centre St &amp; Worth St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Columbia St &amp; Lorraine St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dean St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Duffield St &amp; Willoughby St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 106 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 15 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 39 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 58 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 82 St &amp; East End Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Forsyth St &amp; Broome St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fulton St &amp; Rockwell Pl&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greenpoint Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;India St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laight St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lexington Ave &amp; E 127 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mercer St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;N 6 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Park Ave &amp; E 124 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Plaza St West &amp; Flatbush Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Riverside Dr &amp; W 104 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Spruce St &amp; Nassau St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Throop Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Verona Pl &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 129 St &amp; Convent Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 24 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 45 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 82 St &amp; Central Park West&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Willoughby St &amp; Fleet St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;1 Ave &amp; E 62 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;11 Ave &amp; W 41 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;27 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;3 Ave &amp; E 112 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;31 St &amp; Thomson Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;47 Ave &amp; 31 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;6 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Amsterdam Ave &amp; W 125 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bergen St &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Broadway &amp; W 37 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carlton Ave &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central Park West &amp; W 85 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Coffey St &amp; Conover St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Crescent St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Driggs Ave &amp; Lorimer St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 102 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 11 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 33 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 55 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 81 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eckford St &amp; Engert Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fulton St &amp; Adams St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grand St &amp; Havemeyer St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Howard St &amp; Centre St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lafayette Ave &amp; St James Pl&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lexington Ave &amp; E 29 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marcy Ave &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Murray St &amp; West St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Old Fulton St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pike St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Riverside Dr &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Smith St &amp; 9 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sterling St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vernon Blvd &amp; 31 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 113 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 20 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 43 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 70 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;William St &amp; Pine St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;2 Ave &amp; E 122 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;21 St &amp; Hoyt Ave S&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;31 St &amp; 23 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;40 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;5 Ave &amp; E 88 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;9 Ave &amp; W 28 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Allen St &amp; Rivington St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bayard St &amp; Baxter St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Broadway &amp; E 22 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cadman Plaza E &amp; Johnson St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Center Blvd &amp; 51 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Clinton Ave &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Congress St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Devoe St &amp; Lorimer St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 118 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 24 St &amp; Park Ave S&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 48 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 6 St &amp; Avenue D&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 72 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 91 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 117 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Graham Ave &amp; Herbert St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Henry St &amp; Bay St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kent Ave &amp; N 7 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Leonard St &amp; Church St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Madison Ave &amp; E 82 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Montgomery St &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Newtown Ave &amp; 23 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Peck Slip &amp; Front St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Putnam Ave &amp; Throop Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;S Portland Ave &amp; Atlantic Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Stanton St &amp; Chrystie St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Union St &amp; Nevins St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 100 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 16 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 35 St &amp; Dyer Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 54 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Water - Whitehall Plaza&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1 Ave &amp; E 16 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;10 Hudson Yards&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;24 Ave &amp; 26 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;3 Ave &amp; E 71 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;31 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;44 Dr &amp; 21 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;5 Ave &amp; E 126 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Amsterdam Ave &amp; W 73 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bedford Ave &amp; Nassau Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Broadway &amp; W 25 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cadman Plaza West &amp; Montague St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central Park W &amp; W 96 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Clinton St &amp; Centre St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Court St &amp; State St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Division Ave &amp; Marcy Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 10 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 128 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 27 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 52 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 75 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 97 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Front St &amp; Maiden Ln&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grand Army Plaza &amp; Plaza St West&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Henry St &amp; Poplar St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kosciuszko St &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lewis Ave &amp; Decatur St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madison St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Morningside Dr &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nostrand Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pershing Square South&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Reade St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Schermerhorn St &amp; Court St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Steinway St &amp; 23 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Van Brunt St &amp; Van Dyke St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 106 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 18 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 38 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 59 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;West End Ave &amp; W 94 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;2 Ave &amp; E 99 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;21 St &amp; 38 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;31 Ave &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;37 St &amp; 24 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;5 Ave &amp; E 73 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;8 Ave &amp; W 52 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Albany Ave &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barclay St &amp; Church St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Broadway &amp; Berry St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bushwick Ave &amp; Powers St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Catherine St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cleveland Pl &amp; Spring St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Commerce St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DeKalb Ave &amp; Skillman St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 118 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 20 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 47 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 5 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 68 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 89 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 112 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Graham Ave &amp; Conselyea St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Harrison St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Johnson St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lenox Ave &amp; W 130 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MacDougal St &amp; Washington Sq&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Monroe St &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Newark Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pearl St &amp; Anchorage Pl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pulaski St &amp; Marcus Garvey Blvd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;S 4 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St. Nicholas Ave &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Union St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 15 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 33 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 52 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 92 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Washington Pl &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;1 Ave &amp; E 68 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;11 Ave &amp; W 59 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;27 St &amp; Hunter St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;3 Ave &amp; Schermerhorn St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;34 Ave &amp; 13 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;47 Ave &amp; Skillman Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;6 Ave &amp; 12 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Astoria Park S &amp; Shore Blvd&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Berkeley Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Broadway &amp; W 38 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carlton Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central Park West &amp; W 100 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Columbia Heights &amp; Cranberry St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Crescent St &amp; Ditmars Blvd&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Driggs Ave &amp; N 9 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 103 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 11 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 33 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 55 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 81 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Emerson Pl &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fulton St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Great Jones St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hudson St &amp; Reade St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lafayette St &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lexington Ave &amp; E 63 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Market St &amp; Cherry St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Myrtle Ave &amp; Lewis Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Old Slip &amp; Front St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pioneer St &amp; Richards St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Riverside Dr &amp; W 78 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South End Ave &amp; Liberty St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Suffolk St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vernon Blvd &amp; 41 Rd&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 116 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 21 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 43 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 74 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Willoughby Ave &amp; Hall St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;19 St &amp; 24 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;2 Ave &amp; E 31 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;31 Ave &amp; 14 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;35 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;5 Ave &amp; 3 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;7 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 123 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bank St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broad St &amp; Bridge St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broadway &amp; W 122 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Carroll St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Classon Ave &amp; St Marks Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbus Ave &amp; W 95 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Degraw St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 115 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 19 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 2 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 45 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 66 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 85 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Franklin Ave &amp; St Marks Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gansevoort St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hancock St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jay St &amp; Tech Pl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lenox Ave &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Little West St &amp; 1 Pl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Metropolitan Ave &amp; Meeker Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nassau Ave &amp; Newell St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Park Pl &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prospect Park West &amp; 8 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rogers Ave &amp; Sterling St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;St Marks Pl &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Union Ave &amp; Jackson St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 12 St &amp; W 4 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 27 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 50 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 88 St &amp; West End Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Washington Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wythe Ave &amp; Metropolitan Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;2 Ave &amp; E 72 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;21 St &amp; 31 Dr&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;31 Ave &amp; 30 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;36 Ave &amp; 10 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;5 Ave &amp; E 29 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;8 Ave &amp; W 31 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bank St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Broadway &amp; 12 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Broadway &amp; Whipple St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Carroll St &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Clermont Ave &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Columbus Ave &amp; W 103 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DeKalb Ave &amp; Hudson Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 115 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 2 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 20 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 47 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 67 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 88 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Franklin St &amp; Dupont St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Garfield Pl &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hanson Pl &amp; Ashland Pl&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jay St &amp; York St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lenox Ave &amp; W 117 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lorimer St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Milton St &amp; Franklin St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nassau Ave &amp; Russell St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Park Pl &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prospect Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;S 3 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;St Marks Pl &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Union Ave &amp; N 12 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 13 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 27 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 52 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 89 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Washington Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;2 Ave &amp; E 104 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;21 St &amp; 43 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;31 Ave &amp; Steinway St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;39 St &amp; 2 Ave - Citi Bike HQ at Industry City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;5 Ave &amp; E 78 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;9 Ave &amp; W 22 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Allen St &amp; Hester St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barrow St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Broadway &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Butler St &amp; Court St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Center Blvd &amp; 48 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cliff St &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Concord St &amp; Bridge St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DeKalb Ave &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 118 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 23 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 48 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 6 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 71 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 89 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Graham Ave &amp; Grand St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Henry St &amp; Atlantic Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kane St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Leonard St &amp; Boerum St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Macon St &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Monroe St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Newton Rd &amp; 44 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pearl St &amp; Hanover Square&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Putnam Ave &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;S 5 Pl &amp; S 5 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Stagg St &amp; Union Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Union St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 15 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 34 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 53 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 95 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Washington St &amp; Gansevoort St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;21 St &amp; Queens Plaza North&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;3 Ave &amp; 14 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;31 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;40 Ave &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;5 Ave &amp; E 93 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;9 Ave &amp; W 45 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Allen St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bayard St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Broadway &amp; Moylan Pl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cadman Plaza E &amp; Red Cross Pl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central Park North &amp; Adam Clayton Powell Blvd&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Clinton Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cooper Square &amp; Astor Pl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ditmars Blvd &amp; 19 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 118 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 25 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 51 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 7 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 72 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 91 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 129 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Graham Ave &amp; Withers St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Henry St &amp; Degraw St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kent Ave &amp; S 11 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Leonard St &amp; Maujer St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madison Ave &amp; E 99 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montrose Ave &amp; Bushwick Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Norfolk St &amp; Broome St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Perry St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Queens Plaza North &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;S Portland Ave &amp; Hanson Pl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Stanton St &amp; Mangin St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;University Pl &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 100 St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 16 St &amp; The High Line&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 37 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 55 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Watts St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;1 Pl &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;12 St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;28 St &amp; 38 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;3 St &amp; Prospect Park West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;35 Ave &amp; 10 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;58th St Depot&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;6 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Avenue D &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Boerum St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Broadway &amp; W 53 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Carroll St &amp; Bond St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cherry St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Columbia St &amp; Rivington St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dean St &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dwight St &amp; Van Dyke St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 109 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 16 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 41 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 59 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 84 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Forsyth St &amp; Canal St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fulton St &amp; Utica Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greenwich Ave &amp; Charles St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;India St &amp; West St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lawrence St &amp; Willoughby St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liberty St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mercer St &amp; Spring St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;N 11 St &amp; Kent Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Park Ave &amp; Marcus Garvey Blvd&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pleasant Ave &amp; E 116 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rivington St &amp; Chrystie St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St James Pl &amp; Oliver St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tompkins Ave &amp; Hopkins St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vesey Pl &amp; River Terrace&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 25 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 46 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 84 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W Broadway &amp; Spring Street&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wolcott St &amp; Dwight St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;1 Ave &amp; E 78 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;11 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;28 Ave &amp; 35 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;3 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;34 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;48 Ave &amp; 5 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;6 Ave &amp; Canal St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Atlantic Ave &amp; Fort Greene Pl&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Berkeley Pl &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Broadway &amp; W 41 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carmine St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Central Park West &amp; W 102 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Columbia St &amp; Degraw St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Crown St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Driggs Ave &amp; N Henry St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 106 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 12 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 35 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 58 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 81 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;FDR Drive &amp; E 35 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fulton St &amp; Clermont Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greene Ave &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Humboldt St &amp; Varet St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lafayette St &amp; Jersey St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lexington Ave &amp; E 111 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;McGuinness Blvd &amp; Eagle St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Myrtle Ave &amp; Marcy Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pacific St &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pioneer St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Riverside Dr &amp; W 82 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South St &amp; Gouverneur Ln&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sullivan Pl &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vernon Blvd &amp; 47 Rd&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 116 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 22 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 44 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 76 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Willoughby Ave &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1 Ave &amp; E 18 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;10 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;24 Ave &amp; 29 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;3 Ave &amp; E 72 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;31 St &amp; Hoyt Ave N&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;44 Dr &amp; Jackson Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;5 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Amsterdam Ave &amp; W 79 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bedford Ave &amp; S 9 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Broadway &amp; W 29 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cambridge Pl &amp; Gates Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Central Park West &amp; W 68 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clinton St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Crescent St &amp; 30 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Division St &amp; Bowery&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 10 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 30 St &amp; Park Ave S&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 53 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 76 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 97 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East End Ave &amp; E 86 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Front St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grand Ave &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Henry St &amp; W 9 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kosciuszko St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lewis Ave &amp; Kosciuszko St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Madison St &amp; Montgomery St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mott St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NYCBS DEPOT - DELANCEY&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pier 40 - Hudson River Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Richards St &amp; Delavan St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Scholes St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Steinway St &amp; 28 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Van Brunt St &amp; Wolcott St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 106 St &amp; Central Park West&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 18 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 41 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 63 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;West End Ave &amp; W 107 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;2 Ave &amp; E 96 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;21 St &amp; 36 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;31 Ave &amp; 34 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;37 Ave &amp; 35 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;5 Ave &amp; E 63 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;8 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Adelphi St &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Banker St &amp; Meserole Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Broadway &amp; Battery Pl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bus Slip &amp; State St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cathedral Pkwy &amp; Broadway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Clermont Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Columbus Drive&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DeKalb Ave &amp; S Portland Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 116 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 20 St &amp; FDR Drive&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 4 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 47 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 68 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 88 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Franklin St &amp; W Broadway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gold St &amp; Frankfort St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Harborside&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;John St &amp; William St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lenox Ave &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MacDougal St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Monroe St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nassau St &amp; Navy St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Paulus Hook&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prospect Pl &amp; Underhill Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;S 4 St &amp; Rodney St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;St Nicholas Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Union Ave &amp; Wallabout St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 15 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 31 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 52 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 90 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Washington Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;14 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;2 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;28 St &amp; 41 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;35 Ave &amp; 37 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;4 Ave &amp; 2 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;7 Ave &amp; Central Park South&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Avenue D &amp; E 12 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bond St &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Broadway &amp; W 56 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Carroll St &amp; Columbia St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Christopher St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Columbia St &amp; W 9 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dean St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 110 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 16 St &amp; Irving Pl&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 2 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 43 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 60 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 84 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Franklin Ave &amp; Empire Blvd&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fulton St &amp; Waverly Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greenwich St &amp; W Houston St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jackson Ave &amp; 46 Rd&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lefferts Pl &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lincoln Pl &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meserole Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;N 12 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Park Ave &amp; St Edwards St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pleasant Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rivington St &amp; Ridge St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St James Pl &amp; Pearl St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Underhill Ave &amp; Lincoln Pl&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 26 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 4 St &amp; 7 Ave S&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 47 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 84 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Warren St &amp; Court St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wyckoff St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;1 Ave &amp; E 30 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;10 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;24 St &amp; 41 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;3 Ave &amp; E 95 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;31 St &amp; Newtown Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;45 Rd &amp; 11 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;5 St &amp; 51 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Amsterdam Ave &amp; W 82 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bergen St &amp; Flatbush Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Broadway &amp; W 32 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Canal St &amp; Rutgers St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central Park West &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Clinton St &amp; Joralemon St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Crescent St &amp; 34 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Douglass St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 11 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 31 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 53 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 77 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 98 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eastern Pkwy &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Frost St &amp; Meeker Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grand St &amp; Elizabeth St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hicks St &amp; Montague St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lafayette Ave &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lewis Ave &amp; Madison St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maiden Ln &amp; Pearl St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mt Morris Park W &amp; W 120 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NYCBS Depot - GOW&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pierrepont St &amp; Monroe Pl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Richardson St &amp; N Henry St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sigourney St &amp; Columbia St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sterling Pl &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vernon Blvd &amp; 10 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 107 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 20 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 42 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 64 St &amp; Thelonious Monk Circle&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;West St &amp; Chambers St&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:start station name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;1 Ave &amp; E 94 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;11 St &amp; 43 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;28 Ave &amp; 44 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;3 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;34 Ave &amp; 38 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;48 Ave &amp; 30 Pl&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;6 Ave &amp; Spring St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Atlantic Ave &amp; Furman St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Berry St &amp; N 8 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Broadway &amp; W 49 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Carroll St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Centre St &amp; Worth St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Columbia St &amp; Lorraine St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dean St &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dwight St &amp; Van Dyke St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 109 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 16 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 41 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 59 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 84 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Forsyth St &amp; Canal St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fulton St &amp; Utica Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greenwich Ave &amp; Charles St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jackson Ave &amp; 46 Rd&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lefferts Pl &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lincoln Pl &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Meserole Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;N 12 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Park Pl &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prospect Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;S 3 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;St Marks Pl &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Union Ave &amp; N 12 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 13 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 27 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 52 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 89 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Washington Park&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;23 Ave &amp; 27 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;3 Ave &amp; E 62 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;31 St &amp; Astoria Blvd&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;43 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;5 Ave &amp; E 103 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;9 St &amp; 44 Rd&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Amsterdam Ave &amp; W 66 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bedford Ave &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Broadway &amp; Roebling St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cadman Plaza West &amp; Montague St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central Park W &amp; W 96 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Clinton St &amp; Centre St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Crescent St &amp; 30 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Division St &amp; Bowery&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 10 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 30 St &amp; Park Ave S&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 53 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 76 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 97 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East End Ave &amp; E 86 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Front St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grand Ave &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hicks St &amp; Montague St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lafayette Ave &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lewis Ave &amp; Madison St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maiden Ln &amp; Pearl St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mt Morris Park W &amp; W 120 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Old Fulton St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pioneer St &amp; Richards St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Riverside Dr &amp; W 78 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South End Ave &amp; Liberty St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Suffolk St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vernon Blvd &amp; 41 Rd&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 116 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 21 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 43 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 74 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Willoughby Ave &amp; Hall St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;1 Ave &amp; E 44 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;11 Ave &amp; W 27 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;27 Ave &amp; 4 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;3 Ave &amp; E 100 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;31 St &amp; Northern Blvd&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;46 Ave &amp; 5 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;5 St &amp; Market St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Amsterdam Ave &amp; W 119 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bergen St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Broadway &amp; W 36 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Carlton Ave &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Central Park West &amp; W 85 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Coffey St &amp; Conover St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Crescent St &amp; Ditmars Blvd&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Driggs Ave &amp; N 9 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 103 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 11 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 33 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 55 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 81 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Emerson Pl &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fulton St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Great Jones St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Humboldt St &amp; Varet St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lafayette St &amp; Jersey St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lexington Ave &amp; E 111 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;McGuinness Blvd &amp; Eagle St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Myrtle Ave &amp; Marcy Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Park Ave &amp; E 124 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pleasant Ave &amp; E 116 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rivington St &amp; Chrystie St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St James Pl &amp; Oliver St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tompkins Ave &amp; Hopkins St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vesey Pl &amp; River Terrace&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 25 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 46 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 84 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W Broadway &amp; Spring Street&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wolcott St &amp; Dwight St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;14 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;2 Ave &amp; 36 St - Citi Bike HQ at Industry City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;30 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;35 St &amp; 34 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;4 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;7 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 118 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baltic St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bond St &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broadway &amp; W 60 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Carroll St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Classon Ave &amp; St Marks Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Columbus Ave &amp; W 95 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DeKalb Ave &amp; Hudson Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 115 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 2 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 20 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 47 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 67 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 88 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Franklin St &amp; Dupont St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Garfield Pl &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hanson Pl &amp; Ashland Pl&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;John St &amp; William St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lenox Ave &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MacDougal St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Monroe St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nassau St &amp; Navy St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Peck Slip &amp; Front St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Putnam Ave &amp; Throop Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;S Portland Ave &amp; Atlantic Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stanton St &amp; Chrystie St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Union St &amp; Nevins St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 100 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 16 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 35 St &amp; Dyer Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 54 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Water - Whitehall Plaza&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;1 Ave &amp; E 110 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;12 Ave &amp; W 40 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;28 St &amp; 36 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;3 St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;34 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;49 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;6 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Avenue D &amp; E 3 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bialystoker Pl &amp; Delancey St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Broadway &amp; W 51 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Carroll St &amp; Bond St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cherry St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Columbia St &amp; Rivington St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dean St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 110 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 16 St &amp; Irving Pl&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 2 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 43 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 60 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 84 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Franklin Ave &amp; Empire Blvd&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fulton St &amp; Waverly Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greenwich St &amp; W Houston St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jackson St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lenox Ave &amp; W 111 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lispenard St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Metropolitan Ave &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;N 15 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Park Pl &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prospect Pl &amp; Underhill Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;S 4 St &amp; Rodney St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St Nicholas Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Union Ave &amp; Wallabout St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 15 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 31 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 52 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 90 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Washington Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;1 Ave &amp; E 62 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;11 Ave &amp; W 41 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;27 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;3 Ave &amp; E 112 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;31 St &amp; Thomson Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;47 Ave &amp; 31 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;6 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Amsterdam Ave &amp; W 125 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bergen St &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Broadway &amp; W 37 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carlton Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central Park West &amp; W 100 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Columbia Heights &amp; Cranberry St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Crown St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Driggs Ave &amp; N Henry St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 106 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 12 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 35 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 58 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 81 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FDR Drive &amp; E 35 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fulton St &amp; Clermont Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greene Ave &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Huron St &amp; Franklin St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LaGuardia Pl &amp; W 3 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lexington Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;McKibbin St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Myrtle Ave &amp; St Edwards St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Park Ave &amp; Marcus Garvey Blvd&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pleasant Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rivington St &amp; Ridge St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;St James Pl &amp; Pearl St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Underhill Ave &amp; Lincoln Pl&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 26 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 4 St &amp; 7 Ave S&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 47 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 84 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Warren St &amp; Court St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wyckoff St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;2 Ave &amp; E 122 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;21 St &amp; Hoyt Ave S&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;31 St &amp; 23 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;40 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;5 Ave &amp; E 88 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;9 Ave &amp; W 28 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Allen St &amp; Rivington St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bayard St &amp; Baxter St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Broadway &amp; E 22 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cadman Plaza E &amp; Johnson St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central Park North &amp; Adam Clayton Powell Blvd&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Clinton Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Court St &amp; Nelson St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Division Av &amp; Hooper St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 123 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 25 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 51 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 74 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 9 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 93 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Front St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grand Army Plaza &amp; Central Park S&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Henry St &amp; Poplar St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kosciuszko St &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lewis Ave &amp; Decatur St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Madison St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morningside Dr &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NYCBS DEPOT - DELANCEY&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pike St &amp; E Broadway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Riverside Blvd &amp; W 67 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Smith St &amp; 3 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sterling Pl &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vernon Blvd &amp; 30 Rd&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 110 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 20 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 42 St &amp; Dyer Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 67 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;West Thames St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1 Ave &amp; E 16 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;10 Hudson Yards&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;24 Ave &amp; 26 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;3 Ave &amp; E 71 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;31 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;44 Dr &amp; 21 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;5 Ave &amp; E 126 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Amsterdam Ave &amp; W 73 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bedford Ave &amp; Nassau Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Broadway &amp; W 25 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cambridge Pl &amp; Gates Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central Park West &amp; W 68 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Clinton St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Crescent St &amp; 34 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Douglass St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 11 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 31 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 53 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 77 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 98 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eastern Pkwy &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Frost St &amp; Meeker Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grand St &amp; Elizabeth St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hope St &amp; Union Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lafayette Ave &amp; Fort Greene Pl&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lexington Ave &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marcus Garvey Blvd &amp; Macon St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Murray St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Old Slip &amp; Front St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pioneer St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Riverside Dr &amp; W 82 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South St &amp; Gouverneur Ln&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sullivan Pl &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vernon Blvd &amp; 47 Rd&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 116 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 22 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 44 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 76 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Willoughby Ave &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;2 Ave &amp; E 99 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;21 St &amp; 38 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;31 Ave &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;37 St &amp; 24 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;5 Ave &amp; E 73 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;8 Ave &amp; W 52 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Albany Ave &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barclay St &amp; Church St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Broadway &amp; Berry St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bushwick Ave &amp; Powers St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Center Blvd &amp; 48 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cliff St &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Congress St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Devoe St &amp; Lorimer St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 118 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 24 St &amp; Park Ave S&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 48 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 6 St &amp; Avenue D&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 72 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 91 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 117 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Graham Ave &amp; Herbert St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Henry St &amp; Degraw St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kent Ave &amp; S 11 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Leonard St &amp; Maujer St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Madison Ave &amp; E 99 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montrose Ave &amp; Bushwick Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Moore St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pier 40 - Hudson River Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Richards St &amp; Delavan St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Scholes St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Steinway St &amp; 28 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Van Brunt St &amp; Wolcott St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 106 St &amp; Central Park West&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 18 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 41 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 63 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;West End Ave &amp; W 107 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;1 Ave &amp; E 68 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;11 Ave &amp; W 59 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;27 St &amp; Hunter St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;3 Ave &amp; Schermerhorn St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;34 Ave &amp; 13 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;47 Ave &amp; Skillman Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;6 Ave &amp; 12 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Astoria Park S &amp; Shore Blvd&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Berkeley Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Broadway &amp; W 38 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carmine St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central Park West &amp; W 102 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Columbia St &amp; Degraw St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cumberland St &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Duane St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 106 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 13 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 39 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 58 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 81 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Flushing Ave &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fulton St &amp; Grand Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greene Ave &amp; Throop Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;India St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laight St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lexington Ave &amp; E 127 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mercer St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;N 6 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Park Ave &amp; St Edwards St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;President St &amp; Henry St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Roebling St &amp; N 4 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St Johns Pl &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Underhill Ave &amp; Pacific St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 11 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 26 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 49 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 87 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Washington Ave &amp; Greene Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wyckoff St &amp; Bond St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;19 St &amp; 24 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;2 Ave &amp; E 31 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;31 Ave &amp; 14 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;35 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;5 Ave &amp; 3 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;7 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 123 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bank St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broad St &amp; Bridge St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broadway &amp; W 122 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Carroll St &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Clermont Ave &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbus Ave &amp; W 103 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DeKalb Ave &amp; S Portland Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 116 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 20 St &amp; FDR Drive&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 4 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 47 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 68 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 88 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Franklin St &amp; W Broadway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gold St &amp; Frankfort St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Harrison St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Johnson St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lenox Ave &amp; W 130 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MacDougal St &amp; Washington Sq&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Monroe St &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Newton Rd &amp; 44 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Perry St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Queens Plaza North &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;S Portland Ave &amp; Hanson Pl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stanton St &amp; Mangin St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;University Pl &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 100 St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 16 St &amp; The High Line&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 37 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 55 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Watts St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;2 Ave &amp; E 72 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;21 St &amp; 31 Dr&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;31 Ave &amp; 30 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;36 Ave &amp; 10 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;5 Ave &amp; E 29 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;8 Ave &amp; W 31 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bank St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Broadway &amp; 12 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Broadway &amp; Whipple St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cathedral Pkwy &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Clermont Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Commerce St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DeKalb Ave &amp; Skillman St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 118 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 20 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 47 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 5 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 68 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 89 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 112 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Graham Ave &amp; Conselyea St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Henry St &amp; Atlantic Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kane St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Leonard St &amp; Boerum St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Macon St &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Monroe St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Newtown Ave &amp; 23 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pershing Square North&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Railroad Ave &amp; Kay Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Schermerhorn St &amp; Bond St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;State St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;University Pl &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 104 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 17 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 37 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 56 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;West Drive &amp; Prospect Park West&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;2 Ave &amp; E 104 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;21 St &amp; 43 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;31 Ave &amp; Steinway St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;39 St &amp; 2 Ave - Citi Bike HQ at Industry City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;5 Ave &amp; E 78 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;9 Ave &amp; W 22 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Allen St &amp; Hester St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barrow St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Broadway &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Butler St &amp; Court St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Center Blvd &amp; 51 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Clinton Ave &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cooper Square &amp; Astor Pl&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ditmars Blvd &amp; 19 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 118 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 25 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 51 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 7 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 72 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 91 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 129 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Graham Ave &amp; Withers St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Henry St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kingston Ave &amp; Herkimer St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Leonard St &amp; Nassau Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Madison Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Morningside Ave &amp; W 123 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nostrand Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pierrepont St &amp; Monroe Pl&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Richardson St &amp; N Henry St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sigourney St &amp; Columbia St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sterling Pl &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vernon Blvd &amp; 10 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 107 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 20 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 42 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 64 St &amp; Thelonious Monk Circle&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;West St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;21 St &amp; Queens Plaza North&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;3 Ave &amp; 14 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;31 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;40 Ave &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;5 Ave &amp; E 93 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;9 Ave &amp; W 45 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Allen St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bayard St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Broadway &amp; Moylan Pl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cadman Plaza E &amp; Red Cross Pl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central Park S &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Clinton St &amp; 4 Place&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Court St &amp; State St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Division Ave &amp; Marcy Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 10 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 128 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 27 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 52 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 75 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 97 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Front St &amp; Maiden Ln&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Grand Army Plaza &amp; Plaza St West&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Henry St &amp; W 9 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kosciuszko St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lewis Ave &amp; Kosciuszko St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madison St &amp; Montgomery St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mott St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NYCBS Depot - GOW&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pike St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Riverside Dr &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Smith St &amp; 9 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sterling St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vernon Blvd &amp; 31 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 113 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 20 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 43 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 70 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;William St &amp; Pine St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;1 Pl &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;12 St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;28 St &amp; 38 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;3 St &amp; Prospect Park West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;35 Ave &amp; 10 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;58th St Depot&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;6 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Avenue D &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Boerum St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Broadway &amp; W 53 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Carroll St &amp; Columbia St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Christopher St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Columbia St &amp; W 9 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Degraw St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 114 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 17 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 2 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 44 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 65 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 85 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Franklin Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fulton St &amp; William St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Halsey St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jay St &amp; Tech Pl&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lenox Ave &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Little West St &amp; 1 Pl&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Metropolitan Ave &amp; Meeker Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nassau Ave &amp; Newell St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pearl St &amp; Anchorage Pl&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pulaski St &amp; Marcus Garvey Blvd&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;S 4 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St. Nicholas Ave &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Union St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 15 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 33 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 52 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 92 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Washington Pl &amp; Broadway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;1 Ave &amp; E 78 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;11 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;28 Ave &amp; 35 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;3 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;34 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;48 Ave &amp; 5 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;6 Ave &amp; Canal St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Atlantic Ave &amp; Fort Greene Pl&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Berkeley Pl &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Broadway &amp; W 41 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carroll St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Centre St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Columbia St &amp; Kane St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dean St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Duffield St &amp; Willoughby St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 106 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 15 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 39 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 58 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 82 St &amp; East End Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Forsyth St &amp; Broome St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fulton St &amp; Rockwell Pl&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greenpoint Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;India St &amp; West St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lawrence St &amp; Willoughby St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Liberty St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mercer St &amp; Spring St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;N 11 St &amp; Kent Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Park Pl &amp; Church St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prospect Park West &amp; 8 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rogers Ave &amp; Sterling St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;St Marks Pl &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Union Ave &amp; Jackson St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 12 St &amp; W 4 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 27 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 50 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 88 St &amp; West End Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Washington Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wythe Ave &amp; Metropolitan Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1 Ave &amp; E 18 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;10 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;24 Ave &amp; 29 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;3 Ave &amp; E 72 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;31 St &amp; Hoyt Ave N&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;44 Dr &amp; Jackson Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;5 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Amsterdam Ave &amp; W 79 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bedford Ave &amp; S 9 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Broadway &amp; W 29 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Canal St &amp; Rutgers St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Central Park West &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clinton St &amp; Joralemon St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Crescent St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Douglass St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 102 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 11 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 32 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 55 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 78 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eastern Pkwy &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Frost St &amp; Meeker St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grand St &amp; Greene St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Howard St &amp; Centre St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lafayette Ave &amp; St James Pl&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lexington Ave &amp; E 29 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marcy Ave &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Murray St &amp; West St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pacific St &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pitt St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Riverside Dr &amp; W 91 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South St &amp; Whitehall St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sullivan St &amp; Washington Sq&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vernon Blvd &amp; 50 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 120 St &amp; Claremont Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 22 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 45 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 78 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Willoughby Ave &amp; Walworth St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;2 Ave &amp; E 96 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;21 St &amp; 36 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;31 Ave &amp; 34 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;37 Ave &amp; 35 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;5 Ave &amp; E 63 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;8 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Adelphi St &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Banker St &amp; Meserole Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Broadway &amp; Battery Pl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bus Slip &amp; State St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Catherine St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cleveland Pl &amp; Spring St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Concord St &amp; Bridge St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DeKalb Ave &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 118 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 23 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 48 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 6 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 71 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 89 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Graham Ave &amp; Grand St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Henry St &amp; Bay St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kent Ave &amp; N 7 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Leonard St &amp; Church St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Madison Ave &amp; E 82 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montgomery St &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norfolk St &amp; Broome St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pershing Square South&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Reade St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Schermerhorn St &amp; Court St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Steinway St &amp; 23 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Van Brunt St &amp; Van Dyke St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 106 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 18 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 38 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 59 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;West End Ave &amp; W 94 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;14 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;2 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;28 St &amp; 41 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;35 Ave &amp; 37 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;4 Ave &amp; 2 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;7 Ave &amp; Central Park South&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Avenue D &amp; E 12 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bond St &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Broadway &amp; W 56 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Carroll St &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Clark St &amp; Henry St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Columbus Ave &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Degraw St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 115 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 19 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 2 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 45 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 66 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 85 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Franklin Ave &amp; St Marks Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gansevoort St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hancock St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jay St &amp; York St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lenox Ave &amp; W 117 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lorimer St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Milton St &amp; Franklin St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nassau Ave &amp; Russell St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pearl St &amp; Hanover Square&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Putnam Ave &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;S 5 Pl &amp; S 5 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stagg St &amp; Union Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Union St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 15 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 34 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 53 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 95 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Washington St &amp; Gansevoort St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;1 Ave &amp; E 30 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;10 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;24 St &amp; 41 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;3 Ave &amp; E 95 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;31 St &amp; Newtown Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;45 Rd &amp; 11 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;5 St &amp; 51 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Amsterdam Ave &amp; W 82 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bergen St &amp; Flatbush Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Broadway &amp; W 32 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Carlton Ave &amp; Dean St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central Park West &amp; W 76 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Clinton St &amp; Union St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Crescent St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Driggs Ave &amp; Lorimer St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 102 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 11 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 33 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 55 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 81 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eckford St &amp; Engert Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fulton St &amp; Adams St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grand St &amp; Havemeyer St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hudson St &amp; Reade St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lafayette St &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lexington Ave &amp; E 63 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Market St &amp; Cherry St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Myrtle Ave &amp; Lewis Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pacific St &amp; Nevins St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Plaza St West &amp; Flatbush Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Riverside Dr &amp; W 104 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Spruce St &amp; Nassau St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Throop Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Verona Pl &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 129 St &amp; Convent Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 24 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 45 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 82 St &amp; Central Park West&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Willoughby St &amp; Fleet St&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:gender:ok]' type='palette'>
            <map to='#76b7b2'>
              <bucket>1</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>2</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Data Totals/Averages'>
      <table>
        <view>
          <datasources>
            <datasource caption='201901-citibike-tripdata+' name='federated.14cj0sa18u4js61ekenn20euv3yh' />
          </datasources>
          <datasource-dependencies datasource='federated.14cj0sa18u4js61ekenn20euv3yh'>
            <column caption='Average Trip Duration in Minutes' datatype='real' name='[Calculation_826410549642219524]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([tripduration]/60)' />
            </column>
            <column caption='Trip Duration in Hours' datatype='real' name='[Calculation_829225297556987907]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([tripduration]/60)/60' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
            <column-instance column='[bikeid]' derivation='CountD' name='[ctd:bikeid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[end station id]' derivation='CountD' name='[ctd:end station id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station id]' derivation='CountD' name='[ctd:start station id:qk]' pivot='key' type='quantitative' />
            <column caption='End Station Id' datatype='integer' name='[end station id]' role='measure' type='quantitative' />
            <column caption='Start Station Id' datatype='integer' name='[start station id]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_829225297556987907]' derivation='Sum' name='[sum:Calculation_829225297556987907:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_826410549642219524]' derivation='User' name='[usr:Calculation_826410549642219524:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14cj0sa18u4js61ekenn20euv3yh].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14cj0sa18u4js61ekenn20euv3yh].[ctd:start station id:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14cj0sa18u4js61ekenn20euv3yh].[ctd:end station id:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14cj0sa18u4js61ekenn20euv3yh].[ctd:bikeid:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14cj0sa18u4js61ekenn20euv3yh].[usr:Calculation_826410549642219524:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Calculation_829225297556987907:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.14cj0sa18u4js61ekenn20euv3yh].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.14cj0sa18u4js61ekenn20euv3yh].[ctd:start station id:qk]&quot;</bucket>
              <bucket>&quot;[federated.14cj0sa18u4js61ekenn20euv3yh].[ctd:end station id:qk]&quot;</bucket>
              <bucket>&quot;[federated.14cj0sa18u4js61ekenn20euv3yh].[ctd:bikeid:qk]&quot;</bucket>
              <bucket>&quot;[federated.14cj0sa18u4js61ekenn20euv3yh].[usr:Calculation_826410549642219524:qk]&quot;</bucket>
              <bucket>&quot;[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Calculation_829225297556987907:qk]&quot;</bucket>
              <bucket>&quot;[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.14cj0sa18u4js61ekenn20euv3yh].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.14cj0sa18u4js61ekenn20euv3yh].[:Measure Names]' value='240' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.14cj0sa18u4js61ekenn20euv3yh].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14cj0sa18u4js61ekenn20euv3yh].[:Measure Names]</rows>
        <cols />
      </table>
      <simple-id uuid='{3FEA1B60-6382-478E-99D8-C52D534888D0}' />
    </worksheet>
    <worksheet name='Data Totals/Averages Per Gender'>
      <table>
        <view>
          <datasources>
            <datasource caption='201901-citibike-tripdata+' name='federated.14cj0sa18u4js61ekenn20euv3yh' />
          </datasources>
          <datasource-dependencies datasource='federated.14cj0sa18u4js61ekenn20euv3yh'>
            <column caption='Average Trip Duration in Minutes' datatype='real' name='[Calculation_826410549642219524]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([tripduration]/60)' />
            </column>
            <column caption='Trip Duration in Hours' datatype='real' name='[Calculation_829225297556987907]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([tripduration]/60)/60' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Sum' caption='Gender' datatype='integer' name='[gender]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Not Specified' />
                <alias key='1' value='Male' />
                <alias key='2' value='Female' />
              </aliases>
            </column>
            <column-instance column='[gender]' derivation='None' name='[none:gender:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_829225297556987907]' derivation='Sum' name='[sum:Calculation_829225297556987907:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_826410549642219524]' derivation='User' name='[usr:Calculation_826410549642219524:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]' scope='rows' value='Rides' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14cj0sa18u4js61ekenn20euv3yh].[none:gender:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Calculation_829225297556987907:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14cj0sa18u4js61ekenn20euv3yh].[none:gender:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Gender:&#9;</run>
                <run bold='true'>&lt;[federated.14cj0sa18u4js61ekenn20euv3yh].[none:gender:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Trip Duration in Hours:&#9;</run>
                <run bold='true'>&lt;[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Calculation_829225297556987907:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14cj0sa18u4js61ekenn20euv3yh].[none:gender:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Gender:&#9;</run>
                <run bold='true'>&lt;[federated.14cj0sa18u4js61ekenn20euv3yh].[none:gender:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Rides:&#9;</run>
                <run bold='true'>&lt;[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.14cj0sa18u4js61ekenn20euv3yh].[usr:Calculation_826410549642219524:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14cj0sa18u4js61ekenn20euv3yh].[none:gender:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Gender:&#9;</run>
                <run bold='true'>&lt;[federated.14cj0sa18u4js61ekenn20euv3yh].[none:gender:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Average Trip Duration in Minutes:&#9;</run>
                <run bold='true'>&lt;[federated.14cj0sa18u4js61ekenn20euv3yh].[usr:Calculation_826410549642219524:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>([federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Calculation_829225297556987907:qk] + ([federated.14cj0sa18u4js61ekenn20euv3yh].[usr:Calculation_826410549642219524:qk] + [federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]))</rows>
        <cols />
      </table>
      <simple-id uuid='{3A63225F-7BB8-43EC-83F3-24596DD8428E}' />
    </worksheet>
    <worksheet name='End Station Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='201901-citibike-tripdata+' name='federated.14cj0sa18u4js61ekenn20euv3yh' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.14cj0sa18u4js61ekenn20euv3yh'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[end station latitude]' derivation='Avg' name='[avg:end station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[end station longitude]' derivation='Avg' name='[avg:end station longitude:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14cj0sa18u4js61ekenn20euv3yh].[none:start station name:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:start station name:nk]' />
              <groupfilter function='member' level='[none:start station name:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]' included-values='in-range-or-null'>
            <min>2</min>
            <max>8874</max>
          </filter>
          <slices>
            <column>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:start station name:nk]</column>
            <column>[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.14cj0sa18u4js61ekenn20euv3yh].[avg:end station latitude:qk]' field-type='quantitative' max='4981000.498738219' min='4965915.7697429201' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.14cj0sa18u4js61ekenn20euv3yh].[avg:end station longitude:qk]' field-type='quantitative' max='-8215150.4378355034' min='-8245521.0248340154' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]' num-steps='4' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.14cj0sa18u4js61ekenn20euv3yh].[none:start station name:nk]' />
              <size column='[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14cj0sa18u4js61ekenn20euv3yh].[avg:end station latitude:qk]</rows>
        <cols>[federated.14cj0sa18u4js61ekenn20euv3yh].[avg:end station longitude:qk]</cols>
      </table>
      <simple-id uuid='{D022EE0D-1A56-4247-99C8-5B7E3E3F35C7}' />
    </worksheet>
    <worksheet name='Least Popular End Stations'>
      <table>
        <view>
          <datasources>
            <datasource caption='201901-citibike-tripdata+' name='federated.14cj0sa18u4js61ekenn20euv3yh' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.14cj0sa18u4js61ekenn20euv3yh'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[end station latitude]' derivation='Avg' name='[avg:end station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[end station longitude]' derivation='Avg' name='[avg:end station longitude:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14cj0sa18u4js61ekenn20euv3yh].[none:start station name:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:start station name:nk]' />
              <groupfilter function='member' level='[none:start station name:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]' included-values='in-range-or-null'>
            <min>2</min>
            <max>26</max>
          </filter>
          <slices>
            <column>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:start station name:nk]</column>
            <column>[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.14cj0sa18u4js61ekenn20euv3yh].[avg:end station latitude:qk]' field-type='quantitative' max='4975064.5151569424' min='4962257.9307824802' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.14cj0sa18u4js61ekenn20euv3yh].[avg:end station longitude:qk]' field-type='quantitative' max='-8222866.5042769946' min='-8245235.3390999148' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]' num-steps='4' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.14cj0sa18u4js61ekenn20euv3yh].[none:start station name:nk]' />
              <size column='[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14cj0sa18u4js61ekenn20euv3yh].[avg:end station latitude:qk]</rows>
        <cols>[federated.14cj0sa18u4js61ekenn20euv3yh].[avg:end station longitude:qk]</cols>
      </table>
      <simple-id uuid='{BD450710-984B-4459-814B-7298242F63CA}' />
    </worksheet>
    <worksheet name='Least Popular Start Stations'>
      <table>
        <view>
          <datasources>
            <datasource caption='201901-citibike-tripdata+' name='federated.14cj0sa18u4js61ekenn20euv3yh' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.14cj0sa18u4js61ekenn20euv3yh'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[start station latitude]' derivation='Avg' name='[avg:start station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station longitude]' derivation='Avg' name='[avg:start station longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14cj0sa18u4js61ekenn20euv3yh].[none:start station name:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:start station name:nk]' />
              <groupfilter function='member' level='[none:start station name:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]' included-values='in-range-or-null'>
            <min>2</min>
            <max>26</max>
          </filter>
          <slices>
            <column>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:start station name:nk]</column>
            <column>[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.14cj0sa18u4js61ekenn20euv3yh].[avg:start station longitude:qk]' field-type='quantitative' max='-8227346.4698934704' min='-8240345.9025942553' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.14cj0sa18u4js61ekenn20euv3yh].[avg:start station latitude:qk]' field-type='quantitative' max='4972382.5493347654' min='4964940.1262930371' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]' num-steps='4' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.14cj0sa18u4js61ekenn20euv3yh].[none:start station name:nk]' />
              <size column='[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Start Station Name:&#9;</run>
                <run bold='true'>&lt;[federated.14cj0sa18u4js61ekenn20euv3yh].[none:start station name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Start Station Latitude:&#9;</run>
                <run bold='true'>&lt;[federated.14cj0sa18u4js61ekenn20euv3yh].[avg:start station latitude:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Start Station Longitude:&#9;</run>
                <run bold='true'>&lt;[federated.14cj0sa18u4js61ekenn20euv3yh].[avg:start station longitude:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Number of Records:&#9;</run>
                <run bold='true'>&lt;[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14cj0sa18u4js61ekenn20euv3yh].[avg:start station latitude:qk]</rows>
        <cols>[federated.14cj0sa18u4js61ekenn20euv3yh].[avg:start station longitude:qk]</cols>
      </table>
      <simple-id uuid='{CC3E457F-1298-4733-A0F8-498F2D40CF3B}' />
    </worksheet>
    <worksheet name='Most Popular End Stations'>
      <table>
        <view>
          <datasources>
            <datasource caption='201901-citibike-tripdata+' name='federated.14cj0sa18u4js61ekenn20euv3yh' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.14cj0sa18u4js61ekenn20euv3yh'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[end station latitude]' derivation='Avg' name='[avg:end station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[end station longitude]' derivation='Avg' name='[avg:end station longitude:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14cj0sa18u4js61ekenn20euv3yh].[none:start station name:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:start station name:nk]' />
              <groupfilter function='member' level='[none:start station name:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]' included-values='in-range-or-null'>
            <min>5564</min>
            <max>8874</max>
          </filter>
          <slices>
            <column>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:start station name:nk]</column>
            <column>[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.14cj0sa18u4js61ekenn20euv3yh].[avg:end station latitude:qk]' field-type='quantitative' max='4977243.8566868743' min='4970877.7660569977' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.14cj0sa18u4js61ekenn20euv3yh].[avg:end station longitude:qk]' field-type='quantitative' max='-8228413.1564227743' min='-8239532.5951117855' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]' num-steps='4' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.14cj0sa18u4js61ekenn20euv3yh].[none:start station name:nk]' />
              <size column='[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14cj0sa18u4js61ekenn20euv3yh].[avg:end station latitude:qk]</rows>
        <cols>[federated.14cj0sa18u4js61ekenn20euv3yh].[avg:end station longitude:qk]</cols>
      </table>
      <simple-id uuid='{C18F158B-2AA1-4C16-A073-7F08A9132F79}' />
    </worksheet>
    <worksheet name='Most Popular Start Stations'>
      <table>
        <view>
          <datasources>
            <datasource caption='201901-citibike-tripdata+' name='federated.14cj0sa18u4js61ekenn20euv3yh' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.14cj0sa18u4js61ekenn20euv3yh'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[start station latitude]' derivation='Avg' name='[avg:start station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station longitude]' derivation='Avg' name='[avg:start station longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14cj0sa18u4js61ekenn20euv3yh].[none:start station name:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:start station name:nk]' />
              <groupfilter function='member' level='[none:start station name:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]' included-values='in-range-or-null'>
            <min>5635</min>
            <max>8874</max>
          </filter>
          <slices>
            <column>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:start station name:nk]</column>
            <column>[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.14cj0sa18u4js61ekenn20euv3yh].[avg:start station longitude:qk]' field-type='quantitative' max='-8226159.1380295884' min='-8240328.011164479' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.14cj0sa18u4js61ekenn20euv3yh].[avg:start station latitude:qk]' field-type='quantitative' max='4978369.8480730662' min='4970257.8980886582' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]' num-steps='4' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14cj0sa18u4js61ekenn20euv3yh].[none:start station name:nk]' />
              <size column='[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Start Station Name:&#9;</run>
                <run bold='true'>&lt;[federated.14cj0sa18u4js61ekenn20euv3yh].[none:start station name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Start Station Latitude:&#9;</run>
                <run bold='true'>&lt;[federated.14cj0sa18u4js61ekenn20euv3yh].[avg:start station latitude:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Start Station Longitude:&#9;</run>
                <run bold='true'>&lt;[federated.14cj0sa18u4js61ekenn20euv3yh].[avg:start station longitude:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Number of Records:&#9;</run>
                <run bold='true'>&lt;[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14cj0sa18u4js61ekenn20euv3yh].[avg:start station latitude:qk]</rows>
        <cols>[federated.14cj0sa18u4js61ekenn20euv3yh].[avg:start station longitude:qk]</cols>
      </table>
      <simple-id uuid='{8EC9EB89-964C-4361-B525-24A5F0C38921}' />
    </worksheet>
    <worksheet name='Most Used Bikes'>
      <table>
        <view>
          <datasources>
            <datasource caption='201901-citibike-tripdata+' name='federated.14cj0sa18u4js61ekenn20euv3yh' />
          </datasources>
          <datasource-dependencies datasource='federated.14cj0sa18u4js61ekenn20euv3yh'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
            <column-instance column='[bikeid]' derivation='None' name='[none:bikeid:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]' included-values='in-range-or-null'>
            <min>479</min>
            <max>559</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.14cj0sa18u4js61ekenn20euv3yh].[none:bikeid:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]' scope='rows' value='Total Rides' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]</rows>
        <cols>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:bikeid:ok]</cols>
      </table>
      <simple-id uuid='{E029FE90-0ADC-4A97-958A-D040A2B9D7BF}' />
    </worksheet>
    <worksheet name='Start Station Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='201901-citibike-tripdata+' name='federated.14cj0sa18u4js61ekenn20euv3yh' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.14cj0sa18u4js61ekenn20euv3yh'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[start station latitude]' derivation='Avg' name='[avg:start station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station longitude]' derivation='Avg' name='[avg:start station longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14cj0sa18u4js61ekenn20euv3yh].[none:start station name:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:start station name:nk]' />
              <groupfilter function='member' level='[none:start station name:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:start station name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.14cj0sa18u4js61ekenn20euv3yh].[avg:start station longitude:qk]' field-type='quantitative' max='-8200991.5943299886' min='-8248882.1035800288' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.14cj0sa18u4js61ekenn20euv3yh].[avg:start station latitude:qk]' field-type='quantitative' max='4986213.9893322671' min='4958717.0470553227' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]' num-steps='4' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14cj0sa18u4js61ekenn20euv3yh].[none:start station name:nk]' />
              <size column='[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Start Station Name:&#9;</run>
                <run bold='true'>&lt;[federated.14cj0sa18u4js61ekenn20euv3yh].[none:start station name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Start Station Latitude:&#9;</run>
                <run bold='true'>&lt;[federated.14cj0sa18u4js61ekenn20euv3yh].[avg:start station latitude:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Start Station Longitude:&#9;</run>
                <run bold='true'>&lt;[federated.14cj0sa18u4js61ekenn20euv3yh].[avg:start station longitude:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Number of Records:&#9;</run>
                <run bold='true'>&lt;[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14cj0sa18u4js61ekenn20euv3yh].[avg:start station latitude:qk]</rows>
        <cols>[federated.14cj0sa18u4js61ekenn20euv3yh].[avg:start station longitude:qk]</cols>
      </table>
      <simple-id uuid='{C72FDE36-E65E-4EE4-A4E5-E1BB24F8BE08}' />
    </worksheet>
    <worksheet name='Trip Duration Young Adults VS Seniors'>
      <table>
        <view>
          <datasources>
            <datasource caption='201901-citibike-tripdata+' name='federated.14cj0sa18u4js61ekenn20euv3yh' />
          </datasources>
          <datasource-dependencies datasource='federated.14cj0sa18u4js61ekenn20euv3yh'>
            <column caption='Age' datatype='integer' name='[Calculation_829225297550897153]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='2019 - [birth year]' />
            </column>
            <column-instance column='[tripduration]' derivation='Avg' name='[avg:tripduration:qk]' pivot='key' type='quantitative' />
            <column caption='Birth Year' datatype='integer' name='[birth year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_829225297550897153]' derivation='None' name='[none:Calculation_829225297550897153:qk]' pivot='key' type='quantitative' />
            <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.14cj0sa18u4js61ekenn20euv3yh].[none:Calculation_829225297550897153:qk]' included-values='in-range'>
            <min>20</min>
            <max>60</max>
          </filter>
          <slices>
            <column>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:Calculation_829225297550897153:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.14cj0sa18u4js61ekenn20euv3yh].[none:Calculation_829225297550897153:qk]' num-steps='4' palette='red_green_white_diverging_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.14cj0sa18u4js61ekenn20euv3yh].[avg:tripduration:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#e5e5e5</color>
                <color>#d6e6d3</color>
                <color>#c8e7c1</color>
                <color>#bae9af</color>
                <color>#abea9d</color>
                <color>#9cec8b</color>
                <color>#8ded78</color>
                <color>#7eee65</color>
                <color>#6ff052</color>
                <color>#5ff13f</color>
                <color>#50f32c</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14cj0sa18u4js61ekenn20euv3yh].[avg:tripduration:qk]' />
              <text column='[federated.14cj0sa18u4js61ekenn20euv3yh].[none:Calculation_829225297550897153:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14cj0sa18u4js61ekenn20euv3yh].[avg:tripduration:qk]</rows>
        <cols>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:Calculation_829225297550897153:qk]</cols>
      </table>
      <simple-id uuid='{00FB71A4-D475-441B-AEA0-2A7E9C901DCD}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Data Totals/Averages'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14cj0sa18u4js61ekenn20euv3yh].[:Measure Names]</field>
            <field>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:Calculation_826410549642854405:nk]</field>
            <field>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:usertype (201902-citibike-tripdata.csv):nk]</field>
            <field>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:usertype:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{04E75FB0-63F8-4E1E-ABD6-9B8854E22AD5}' />
    </window>
    <window class='worksheet' maximized='true' name='Data Totals/Averages Per Gender'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.14cj0sa18u4js61ekenn20euv3yh].[none:gender:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14cj0sa18u4js61ekenn20euv3yh].[:Measure Names]</field>
            <field>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:Calculation_826410549642854405:nk]</field>
            <field>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:gender:ok]</field>
            <field>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:usertype (201902-citibike-tripdata.csv):nk]</field>
            <field>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:usertype:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{22A83A8B-4E84-4B69-86F8-9D1350BFC9EC}' />
    </window>
    <window class='worksheet' name='Start Station Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:birth year:qk]</field>
            <field>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:end station name:nk]</field>
            <field>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:start station name (201902-citibike-tripdata.csv):nk]</field>
            <field>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:start station name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{2BC16679-4544-49E4-ACEF-DA7365DD1F13}' />
    </window>
    <window class='worksheet' name='Most Popular Start Stations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:birth year:qk]</field>
            <field>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:end station name:nk]</field>
            <field>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:start station name (201902-citibike-tripdata.csv):nk]</field>
            <field>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:start station name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{E880D567-DF68-4442-9C9C-E0D660FCB4A8}' />
    </window>
    <window class='worksheet' name='Least Popular Start Stations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:birth year:qk]</field>
            <field>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:end station name:nk]</field>
            <field>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:start station name (201902-citibike-tripdata.csv):nk]</field>
            <field>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:start station name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{7DF51A3F-4678-402A-9A89-ADC86D763C12}' />
    </window>
    <window class='worksheet' name='End Station Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:birth year:qk]</field>
            <field>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:end station name:nk]</field>
            <field>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:start station name (201902-citibike-tripdata.csv):nk]</field>
            <field>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:start station name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{B236EDE5-2B18-447F-A626-E15ED64A06AB}' />
    </window>
    <window class='worksheet' name='Most Popular End Stations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:birth year:qk]</field>
            <field>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:end station name:nk]</field>
            <field>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:start station name (201902-citibike-tripdata.csv):nk]</field>
            <field>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:start station name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{8BFBEC9A-BB87-4EAE-9121-25A58F4AFEAD}' />
    </window>
    <window class='worksheet' name='Least Popular End Stations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:birth year:qk]</field>
            <field>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:end station name:nk]</field>
            <field>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:start station name (201902-citibike-tripdata.csv):nk]</field>
            <field>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:start station name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{69FEC0A8-915C-4B7E-B0B7-82A6935937DD}' />
    </window>
    <window class='worksheet' name='Trip Duration Young Adults VS Seniors'>
      <cards>
        <edge name='left'>
          <strip size='190'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='8' param='[federated.14cj0sa18u4js61ekenn20euv3yh].[avg:tripduration:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14cj0sa18u4js61ekenn20euv3yh].[avg:tripduration:qk]</field>
            <field>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:Calculation_829225297550897153:qk]</field>
            <field>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:birth year:qk]</field>
            <field>[federated.14cj0sa18u4js61ekenn20euv3yh].[none:usertype:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EDE960CC-E90C-4996-B002-DBA575FB78C3}' />
    </window>
    <window class='worksheet' name='Most Used Bikes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.14cj0sa18u4js61ekenn20euv3yh].[sum:Number of Records:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
      <simple-id uuid='{87C02332-690F-4C5F-B060-F4E71461E649}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='124' name='Data Totals/Averages' width='192'>
      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
      WDT/D/Cb+MxLpHAwAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Data Totals/Averages Per Gender' width='138'>
      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
    </thumbnail>
    <thumbnail height='192' name='End Station Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Least Popular End Stations' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Least Popular Start Stations' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Most Popular End Stations' width='192'>
      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
      mXXR/v8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Most Popular Start Stations' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Most Used Bikes' width='192'>
      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
      /FQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Start Station Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Trip Duration Young Adults VS Seniors' width='192'>
      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
      D2RRAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
